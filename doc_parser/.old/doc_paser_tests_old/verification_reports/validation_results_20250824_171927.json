{
  "metadata": {
    "timestamp": "2025-08-24T17:19:27.640054",
    "database": "docparser",
    "generator": "test_rag_retrieval.py (Neo4jデータのみ使用、詳細分析機能付き)",
    "export_timestamp": "2025-08-24T17:19:28.663454"
  },
  "summary": {
    "total": 60,
    "passed": 55,
    "failed": 5,
    "test_types": {
      "test": {
        "passed": 55,
        "total": 60,
        "success_rate": 91.66666666666666
      }
    }
  },
  "results": [
    {
      "test_name": "BlankElement_negative.py",
      "passed": false,
      "details": "引数数不一致を正しく検出: 2/2",
      "test_type": "test",
      "database_spec": {
        "name": "BlankElement",
        "description": "指定要素の表示状態を設定する。返り値はなし。",
        "parameters": [
          {
            "position": 0,
            "description": "表示状態を指定する要素",
            "name": "Element",
            "type": "要素"
          },
          {
            "position": 1,
            "description": "True の時は非表示にする。False の時は表示する。",
            "name": "bBlank",
            "type": "bool"
          }
        ]
      },
      "generated_code": "# test_type: negative\n# This snippet should FAIL validation because it has the wrong number of arguments.\n# The test itself should PASS if the validator correctly identifies this failure.\n\npart.BlankElement(\n    \"extra_value\",           # Extra argument that should cause failure\n    \"another_extra_value\"    # Another extra argument\n)",
      "arg_count_details": {
        "generated": 0,
        "expected": 2
      }
    },
    {
      "test_name": "BlankElement_positive.py",
      "passed": true,
      "details": "引数数一致: 2/2",
      "test_type": "test"
    },
    {
      "test_name": "BodyDivideByElements_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/7",
      "test_type": "test"
    },
    {
      "test_name": "BodyDivideByElements_positive.py",
      "passed": true,
      "details": "引数数一致: 7/7",
      "test_type": "test"
    },
    {
      "test_name": "BodySeparateBySubSolids_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/6",
      "test_type": "test"
    },
    {
      "test_name": "BodySeparateBySubSolids_positive.py",
      "passed": true,
      "details": "引数数一致: 6/6",
      "test_type": "test"
    },
    {
      "test_name": "CreateBracketParam_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateBracketParam_positive.py",
      "passed": true,
      "details": "引数数一致: 0/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateBracket_negative.py",
      "passed": false,
      "details": "引数数不一致を正しく検出: 2/2",
      "test_type": "test",
      "database_spec": {
        "name": "CreateBracket",
        "description": "ブラケットソリッド要素を作成する。返り値は作成したソリッド要素のID。",
        "parameters": [
          {
            "position": 0,
            "description": "ブラケットパラメータオブジェクト",
            "name": "ParamObj",
            "type": "ブラケット要素のパラメータオブジェクト"
          },
          {
            "position": 1,
            "description": "更新フラグ（未実装、使用しない）",
            "name": "bUpdate",
            "type": "bool"
          }
        ]
      },
      "generated_code": "# test_type: negative\n# This snippet should FAIL validation because it has the wrong number of arguments.\n# The test itself should PASS if the validator correctly identifies this failure.\n\npart.CreateBracket(\n    \"extra_value\",           # Extra argument that should cause failure\n    \"another_extra_value\"    # Another extra argument\n)",
      "arg_count_details": {
        "generated": 0,
        "expected": 2
      }
    },
    {
      "test_name": "CreateBracket_positive.py",
      "passed": true,
      "details": "引数数一致: 2/2",
      "test_type": "test"
    },
    {
      "test_name": "CreateElementsFromFile_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/1",
      "test_type": "test"
    },
    {
      "test_name": "CreateElementsFromFile_positive.py",
      "passed": true,
      "details": "引数数一致: 1/1",
      "test_type": "test"
    },
    {
      "test_name": "CreateLinearSweepParam_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateLinearSweepParam_positive.py",
      "passed": true,
      "details": "引数数一致: 0/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateLinearSweepSheet_negative.py",
      "passed": false,
      "details": "引数数不一致を正しく検出: 2/2",
      "test_type": "test",
      "database_spec": {
        "name": "CreateLinearSweepSheet",
        "description": "プロファイル要素を押し出してシート要素を作成する。返り値は作成されたシート要素の要素ID。",
        "parameters": [
          {
            "position": 0,
            "description": "押し出しパラメータオブジェクト",
            "name": "ParamObj",
            "type": "押し出しパラメータオブジェクト"
          },
          {
            "position": 1,
            "description": "更新フラグ（未実装、使用しない）",
            "name": "bUpdate",
            "type": "bool"
          }
        ]
      },
      "generated_code": "# test_type: negative\n# This snippet should FAIL validation because it has the wrong number of arguments.\n# The test itself should PASS if the validator correctly identifies this failure.\n\npart.CreateLinearSweepSheet(\n    \"extra_value\",           # Extra argument that should cause failure\n    \"another_extra_value\"    # Another extra argument\n)",
      "arg_count_details": {
        "generated": 0,
        "expected": 2
      }
    },
    {
      "test_name": "CreateLinearSweepSheet_positive.py",
      "passed": true,
      "details": "引数数一致: 2/2",
      "test_type": "test"
    },
    {
      "test_name": "CreateLinearSweep_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/4",
      "test_type": "test"
    },
    {
      "test_name": "CreateLinearSweep_positive.py",
      "passed": true,
      "details": "引数数一致: 4/4",
      "test_type": "test"
    },
    {
      "test_name": "CreateOffsetSheet_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/7",
      "test_type": "test"
    },
    {
      "test_name": "CreateOffsetSheet_positive.py",
      "passed": true,
      "details": "引数数一致: 7/7",
      "test_type": "test"
    },
    {
      "test_name": "CreateOtherSolid_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/6",
      "test_type": "test"
    },
    {
      "test_name": "CreateOtherSolid_positive.py",
      "passed": true,
      "details": "引数数一致: 6/6",
      "test_type": "test"
    },
    {
      "test_name": "CreatePlate_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/14",
      "test_type": "test"
    },
    {
      "test_name": "CreatePlate_positive.py",
      "passed": true,
      "details": "引数数一致: 14/14",
      "test_type": "test"
    },
    {
      "test_name": "CreateProfileParam_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateProfileParam_positive.py",
      "passed": true,
      "details": "引数数一致: 0/0",
      "test_type": "test"
    },
    {
      "test_name": "CreateProfile_negative.py",
      "passed": false,
      "details": "引数数不一致を正しく検出: 2/2",
      "test_type": "test",
      "database_spec": {
        "name": "CreateProfile",
        "description": "条材ソリッド要素を作成する（取付線指定等）。返り値は作成した条材ソリッド要素のID配列（配列内に Web 要素やフランジ要素を含む）。",
        "parameters": [
          {
            "position": 0,
            "description": "条材要素のパラメータオブジェクト",
            "name": "ParamObj",
            "type": "条材要素のパラメータオブジェクト"
          },
          {
            "position": 1,
            "description": "更新フラグ（未実装、使用しない）",
            "name": "bUpdate",
            "type": "bool"
          }
        ]
      },
      "generated_code": "# test_type: negative\n# This snippet should FAIL validation because it has the wrong number of arguments.\n# The test itself should PASS if the validator correctly identifies this failure.\n\npart.CreateProfile(\n    \"extra_value\",           # Extra argument that should cause failure\n    \"another_extra_value\"    # Another extra argument\n)",
      "arg_count_details": {
        "generated": 0,
        "expected": 2
      }
    },
    {
      "test_name": "CreateProfile_positive.py",
      "passed": true,
      "details": "引数数一致: 2/2",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchArc3Pts_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/7",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchArc3Pts_positive.py",
      "passed": true,
      "details": "引数数一致: 7/7",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchArc_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/8",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchArc_positive.py",
      "passed": true,
      "details": "引数数一致: 8/8",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchCircle_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/8",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchCircle_positive.py",
      "passed": true,
      "details": "引数数一致: 8/8",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchEllipse_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/10",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchEllipse_positive.py",
      "passed": true,
      "details": "引数数一致: 10/10",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchLayer_negative.py",
      "passed": false,
      "details": "引数数不一致を正しく検出: 2/2",
      "test_type": "test",
      "database_spec": {
        "name": "CreateSketchLayer",
        "description": "スケッチレイヤーを作成する。返り値は作成されたスケッチレイヤー要素の要素ID。",
        "parameters": [
          {
            "position": 0,
            "description": "作成するスケッチレイヤー名称（空文字可）",
            "name": "SketchLayerName",
            "type": "文字列"
          },
          {
            "position": 1,
            "description": "レイヤーを作成するスケッチ要素",
            "name": "SketchPlane",
            "type": "要素"
          }
        ]
      },
      "generated_code": "# test_type: negative\n# This snippet should FAIL validation because it has the wrong number of arguments.\n# The test itself should PASS if the validator correctly identifies this failure.\n\npart.CreateSketchLayer(\n    \"extra_value\",           # Extra argument that should cause failure\n    \"another_extra_value\"    # Another extra argument\n)",
      "arg_count_details": {
        "generated": 0,
        "expected": 2
      }
    },
    {
      "test_name": "CreateSketchLayer_positive.py",
      "passed": true,
      "details": "引数数一致: 2/2",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchLine_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/6",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchLine_positive.py",
      "passed": true,
      "details": "引数数一致: 6/6",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchNURBSCurve_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/11",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchNURBSCurve_positive.py",
      "passed": true,
      "details": "引数数一致: 11/11",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchPlane_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/12",
      "test_type": "test"
    },
    {
      "test_name": "CreateSketchPlane_positive.py",
      "passed": true,
      "details": "引数数一致: 12/12",
      "test_type": "test"
    },
    {
      "test_name": "CreateSolid_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/3",
      "test_type": "test"
    },
    {
      "test_name": "CreateSolid_positive.py",
      "passed": true,
      "details": "引数数一致: 3/3",
      "test_type": "test"
    },
    {
      "test_name": "CreateThicken_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/10",
      "test_type": "test"
    },
    {
      "test_name": "CreateThicken_positive.py",
      "passed": true,
      "details": "引数数一致: 10/10",
      "test_type": "test"
    },
    {
      "test_name": "CreateVariable_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/4",
      "test_type": "test"
    },
    {
      "test_name": "CreateVariable_positive.py",
      "passed": true,
      "details": "引数数一致: 4/4",
      "test_type": "test"
    },
    {
      "test_name": "MirrorCopy_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/3",
      "test_type": "test"
    },
    {
      "test_name": "MirrorCopy_positive.py",
      "passed": true,
      "details": "引数数一致: 3/3",
      "test_type": "test"
    },
    {
      "test_name": "ReverseSheet_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/1",
      "test_type": "test"
    },
    {
      "test_name": "ReverseSheet_positive.py",
      "passed": true,
      "details": "引数数一致: 1/1",
      "test_type": "test"
    },
    {
      "test_name": "SetElementColor_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/5",
      "test_type": "test"
    },
    {
      "test_name": "SetElementColor_positive.py",
      "passed": true,
      "details": "引数数一致: 5/5",
      "test_type": "test"
    },
    {
      "test_name": "SheetAlignNormal_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/4",
      "test_type": "test"
    },
    {
      "test_name": "SheetAlignNormal_positive.py",
      "passed": true,
      "details": "引数数一致: 4/4",
      "test_type": "test"
    },
    {
      "test_name": "TranslationCopy_negative.py",
      "passed": true,
      "details": "引数数不一致を正しく検出: 2/5",
      "test_type": "test"
    },
    {
      "test_name": "TranslationCopy_positive.py",
      "passed": true,
      "details": "引数数一致: 5/5",
      "test_type": "test"
    }
  ]
}