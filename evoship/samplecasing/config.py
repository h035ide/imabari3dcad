"""
EvoShip ケーシング構造モデル設定ファイル
設計パラメータとマテリアル設定を管理
"""

# =============================================================================
# マテリアル設定
# =============================================================================
MATERIALS = {
    'SS400': 'SS400',
    'default': 'SS400'
}

# =============================================================================
# 設計変数（フレーム位置）
# =============================================================================
FRAME_POSITIONS = {
    'FR7': 4690,    # mm
    'FR8': 5360,    # mm
    'FR9': 6030,    # mm
    'FR10': 6700,   # mm
    'FR11': 7370,   # mm
    'FR12': 8170,   # mm
    'FR13': 8970,   # mm
    'FR14': 9770,   # mm
    'FR15': 10570,  # mm
}

# =============================================================================
# デッキレベル位置
# =============================================================================
DECK_LEVELS = {
    'Casing.DL01': 800,   # mm
    'Casing.DL02': 1600,  # mm
    'Casing.DL03': 2400,  # mm
    'Casing.DL04': 3200,  # mm
    'Casing.DL05': 4000,  # mm
}

# =============================================================================
# プロファイルタイプ定義
# =============================================================================
PROFILE_TYPES = {
    'STANDARD_ANGLE': 1002,      # 標準アングル
    'STANDARD_TEE': 1003,        # 標準T形
    'FLANGE': 1201,              # フランジ
}

# =============================================================================
# 標準プロファイルパラメータ
# =============================================================================
STANDARD_PROFILES = {
    'ANGLE_150x90x9': {
        'type': 1002,
        'params': ["150","90","9.0000000000000018","12","6"]
    },
    'ANGLE_125x75x7': {
        'type': 1002,
        'params': ["125","75","7","10","5"]
    },
    'TEE_300x90x11': {
        'type': 1003,
        'params': ["300","90","11","16","19","9.5"]
    },
    'TEE_200x90x9': {
        'type': 1003,
        'params': ["200","90","9.0000000000000018","14","14","7"]
    },
    'FLANGE_200x14x900': {
        'type': 1201,
        'params': ["200","14","900","10"]
    },
    'FLANGE_150x12x388': {
        'type': 1201,
        'params': ["150","12","388","10"]
    }
}

# =============================================================================
# 色設定
# =============================================================================
COLORS = {
    'purple': ("148", "0", "211", "0.39999997615814209"),
    'red': ("255", "0", "0", "0.19999998807907104"),
    'cyan': ("0", "255", "255", "0.19999998807907104"),
    'brown': ("139", "69", "19", "0.79999995231628418"),
    'gray': ("225", "225", "225", "1"),
}

# =============================================================================
# スケッチ平面設定
# =============================================================================
SKETCH_PLANES = {
    'WALL': {
        'name': 'HK.Az.Wall',
        'type': 'PL,Z',
        'position': '0'
    },
    'DECK': {
        'name': 'HK.Ax.Deck',
        'type': 'PL,X',
        'position': '0'
    }
}

# =============================================================================
# 押し出しパラメータ
# =============================================================================
EXTRUDE_PARAMS = {
    'direction_type': '2',
    'parameter1': '50000',
    'parameter2': '10000',
    'interval_sweep': False
}

# =============================================================================
# エンド要素設定
# =============================================================================
END_ELEMENT_TYPES = {
    'STANDARD': {
        'type': 1102,
        'params': ["25","29.999999999999996","0","0"]
    },
    'FLANGE': {
        'type': 1102,
        'params': ["25","14.999999999999998","0","0"]
    },
    'NONE': {
        'type': 1103,
        'params': ["0"]
    }
}

# =============================================================================
# スカルロップ設定
# =============================================================================
SCALLOP_TYPES = {
    'STANDARD': {
        'type': 1120,
        'params': ["50"]
    },
    'ANGLE': {
        'type': 1121,
        'params': ["35","40"]
    },
    'SPECIAL': {
        'type': 1121,
        'params': ["25","40"]
    }
}

# =============================================================================
# ブラケット設定
# =============================================================================
BRACKET_TYPES = {
    'STANDARD': {
        'type': 1501,
        'thickness': '7.9999999999999964'
    },
    'DECK': {
        'type': 1505,
        'thickness': '9.9999999999999982',
        'params': ["200"]
    }
}

# =============================================================================
# 寸法設定
# =============================================================================
DIMENSION_TYPES = {
    'STANDARD': {
        'type': 1531,
        'params': ["200","15"]
    },
    'LONG': {
        'type': 1531,
        'params': ["800","15"]
    },
    'VERY_LONG': {
        'type': 1531,
        'params': ["250","15"]
    },
    'VERTICAL': {
        'type': 1541,
        'params': ["0","100"]
    }
}

# =============================================================================
# フランジ設定
# =============================================================================
FLANGE_TYPES = {
    'STANDARD': {
        'type': 262,
        'params': ["100","30","29.999999999999996","30","30","1"]
    },
    'DECK': {
        'type': 262,
        'params': ["75","30","29.999999999999996","30","50","1"]
    }
}

# =============================================================================
# ユーティリティ関数
# =============================================================================
def get_frame_position(frame_name):
    """フレーム位置を取得"""
    return FRAME_POSITIONS.get(frame_name, 0)

def get_deck_level(level_name):
    """デッキレベルを取得"""
    return DECK_LEVELS.get(level_name, 0)

def get_profile_params(profile_name):
    """プロファイルパラメータを取得"""
    return STANDARD_PROFILES.get(profile_name, {})

def get_color(color_name):
    """色設定を取得"""
    return COLORS.get(color_name, COLORS['gray'])

def create_base_plane(variable_name, direction):
    """ベース平面の文字列を作成"""
    return f"PL,O,{variable_name},{direction}" 